const baseURL = 'https://pokeapi.co/api/v2';

const endpoint = {
    berry: {
        base: '/berry',
        firmness: '/berry-firmness',
        flavor: '/berry-flavor',
    },
    contest: {
        type: '/contest-type',
        effect: '/contest-effect',
        superEffect: '/super-contest-effect',
    },
    encounter: {
        method: '/encounter-method',
        condition: '/encounter-condition',
        conditionValue: '/encounter-condition-value',
    },
    evolution: {
        chain: '/evolution-chain',
        trigger: '/evolution-trigger',
    },
    game: {
        generation: '/generation',
        pokedex: '/pokedex',
        version: '/version',
        versionGroup: '/version-group',
    },
    item: {
        base: '/item',
        attribute: '/item-attribute',
        category: '/item-category',
        flingEffect: '/item-fling-effect',
        pocket: '/item-pocket',
    },
    location: {
        base: '/location',
        area: '/location-area',
        palParkArea: '/pal-park-area',
        region: '/region',
    },
    machine: {
        base: '/machine'
    },
    move: {
        base: '/move',
        ailment: '/move-ailment',
        battleStyle: '/move-battle-style',
        category: '/move-category',
        damageClass: '/move-damage-class',
        learnMethod: '/move-learn-method',
        target: '/move-target',
    },
    pokemon: {
        ability: '/ability',
        characteristic: '/characteristic',
        eggGroup: '/egg-group',
        gender: '/gender',
        growthRate: '/growth-rate',
        nature: '/nature',
        pokeathlonStat: '/pokeathlon-stat',
        encounters: '/encounters',
        base: '/pokemon',
        color: '/pokemon-color',
        form: '/pokemon-form',
        habitat: '/pokemon-habitat',
        shape: '/pokemon-shape',
        species: '/pokemon-species',
        stat: '/stat',
        type: '/type',
    },
    utility : {
        language: '/language'
    },
};

const url = {
    berry: {
        all: (offset: number): string => `${endpoint.berry.base}/?offset=${offset}`,
        byId: (id: number): string => `${endpoint.berry.base}/${id}`,
        allFirmnesses: (offset: number): string => `${endpoint.berry.firmness}/?offset=${offset}`,
        firmnessById: (id: number): string => `${endpoint.berry.firmness}/${id}`,
        allFlavors: (offset: number): string => `${endpoint.berry.flavor}/?offset=${offset}`,
        flavorById: (id: number): string => `${endpoint.berry.flavor}/${id}`,
    },
    contest: {
        allTypes: (offset: number): string => `${endpoint.contest.type}/?offset=${offset}`,
        typeById: (id: number): string => `${endpoint.contest.type}/${id}`,
        allEffects: (offset: number): string => `${endpoint.contest.effect}/?offset=${offset}`,
        effectById: (id: number): string => `${endpoint.contest.effect}/${id}`,
        allSuperEffects: (offset: number): string => `${endpoint.contest.superEffect}/?offset=${offset}`,
        superEffectById: (id: number): string => `${endpoint.contest.superEffect}/${id}`,
    },
    encounter: {
        allMethods: (offset: number): string => `${endpoint.encounter.method}/?offset=${offset}`,
        methodById: (id: number): string => `${endpoint.encounter.method}/${id}`,
        allConditions: (offset: number): string => `${endpoint.encounter.condition}/?offset=${offset}`,
        conditionById: (id: number): string => `${endpoint.encounter.condition}/${id}`,
        allConditionValues: (offset: number): string => `${endpoint.encounter.conditionValue}/?offset=${offset}`,
        conditionValueById: (id: number): string => `${endpoint.encounter.conditionValue}/${id}`,
    },
    evolution: {
        allChains: (offset: number): string => `${endpoint.evolution.chain}/?offset=${offset}`,
        chainById: (id: number): string => `${endpoint.evolution.chain}/${id}`,
        allTriggers: (offset: number): string => `${endpoint.evolution.trigger}/?offset=${offset}`,
        triggerById: (id: number): string => `${endpoint.evolution.trigger}/${id}`,
    },
    game: {
        allGenerations: (offset: number): string => `${endpoint.game.generation}/?offset=${offset}`,
        generationById: (id: number): string => `${endpoint.game.generation}/${id}`,
        allPokedexes: (offset: number): string => `${endpoint.game.pokedex}/?offset=${offset}`,
        pokedexById: (id: number): string => `${endpoint.game.pokedex}/${id}`,
        allVersions: (offset: number): string => `${endpoint.game.version}/?offset=${offset}`,
        versionById: (id: number): string => `${endpoint.game.version}/${id}`,
        allVersionGroups: (offset: number): string => `${endpoint.game.versionGroup}/?offset=${offset}`,
        versionGroupById: (id: number): string => `${endpoint.game.versionGroup}/${id}`,
    },
    item: {
        all: (offset: number): string => `${endpoint.item.base}/?offset=${offset}`,
        byId: (id: number): string => `${endpoint.item.base}/${id}`,
        allAttributes: (offset: number): string => `${endpoint.item.attribute}/?offset=${offset}`,
        attributeById: (id: number): string => `${endpoint.item.attribute}/${id}`,
        allCategories: (offset: number): string => `${endpoint.item.category}/?offset=${offset}`,
        categoryById: (id: number): string => `${endpoint.item.category}/${id}`,
        allFlingEffects: (offset: number): string => `${endpoint.item.flingEffect}/?offset=${offset}`,
        flingEffectById: (id: number): string => `${endpoint.item.flingEffect}/${id}`,
        allPockets: (offset: number): string => `${endpoint.item.pocket}/?offset=${offset}`,
        pocketById: (id: number): string => `${endpoint.item.pocket}/${id}`,
    },
    location: {
        all: (offset: number): string => `${endpoint.location.base}/?offset=${offset}`,
        byId: (id: number): string => `${endpoint.location.base}/${id}`,
        allAreas: (offset: number): string => `${endpoint.location.area}/?offset=${offset}`,
        areaById: (id: number): string => `${endpoint.location.area}/${id}`,
        allPalParkAreas: (offset: number): string => `${endpoint.location.palParkArea}/?offset=${offset}`,
        palParkAreaById: (id: number): string => `${endpoint.location.palParkArea}/${id}`,
        allRegions: (offset: number): string => `${endpoint.location.region}/?offset=${offset}`,
        regionById: (id: number): string => `${endpoint.location.region}/${id}`,
    },
    machine: {
        all: (offset: number): string => `${endpoint.machine.base}/?offset=${offset}`,
        byId: (id: number): string => `${endpoint.machine.base}/${id}`,
    },
    move: {
        all: (offset: number): string => `${endpoint.move.base}/?offset=${offset}`,
        byId: (id: number): string => `${endpoint.move.base}/${id}`,
        allAilments: (offset: number): string => `${endpoint.move.ailment}/?offset=${offset}`,
        ailmentById: (id: number): string => `${endpoint.move.ailment}/${id}`,
        allBattleStyles: (offset: number): string => `${endpoint.move.battleStyle}/?offset=${offset}`,
        battleStyleById: (id: number): string => `${endpoint.move.battleStyle}/${id}`,
        allCategories: (offset: number): string => `${endpoint.move.category}/?offset=${offset}`,
        categoryById: (id: number): string => `${endpoint.move.category}/${id}`,
        allDamageClasses: (offset: number): string => `${endpoint.move.damageClass}/?offset=${offset}`,
        damageClassById: (id: number): string => `${endpoint.move.damageClass}/${id}`,
        allLearnMethods: (offset: number): string => `${endpoint.move.learnMethod}/?offset=${offset}`,
        learnMethodById: (id: number) => `${endpoint.move.learnMethod}/${id}`,
        allTargets: (offset: number): string => `${endpoint.move.target}/?offset=${offset}`,
        targetById: (id: number): string => `${endpoint.move.target}/${id}`,
    },
    pokemon: {
        all: (offset: number): string => `${endpoint.pokemon.base}/?offset=${offset}`,
        byId: (id: string): string => `${endpoint.pokemon.base}/${id}`,
        allAbilities: (offset: number): string => `${endpoint.pokemon.ability}/?offset=${offset}`,
        abilityById: (id: number): string => `${endpoint.pokemon.ability}/${id}`,
        allCharacteristics: (offset: number): string => `${endpoint.pokemon.characteristic}/?offset=${offset}`,
        characteristicById: (id: number): string => `${endpoint.pokemon.characteristic}/${id}`,
        allEggGroups: (offset: number): string => `${endpoint.pokemon.eggGroup}/?offset=${offset}`,
        eggGroupById: (id: number): string => `${endpoint.pokemon.eggGroup}/${id}`,
        allGenders: (offset: number): string => `${endpoint.pokemon.gender}/?offset=${offset}`,
        genderById: (id: number): string => `${endpoint.pokemon.gender}/${id}`,
        allGrowthRates: (offset: number): string => `${endpoint.pokemon.growthRate}/?offset=${offset}`,
        growthRateById: (id: number): string => `${endpoint.pokemon.growthRate}/${id}`,
        allNatures: (offset: number): string => `${endpoint.pokemon.nature}/?offset=${offset}`,
        natureById: (id: number): string => `${endpoint.pokemon.nature}/${id}`,
        allPokeathlonStats: (offset: number): string => `${endpoint.pokemon.pokeathlonStat}/?offset=${offset}`,
        pokeathlonStatById: (id: number): string => `${endpoint.pokemon.pokeathlonStat}/${id}`,
        allEncountersById: (id: number, offset: number) => `${endpoint.pokemon.base}/${id}${endpoint.pokemon.encounters}/?offset=${offset}`,
        allColors: (offset: number): string => `${endpoint.pokemon.color}/?offset=${offset}`,
        colorById: (id: number): string => `${endpoint.pokemon.color}/${id}`,
        allForms: (offset: number): string => `${endpoint.pokemon.form}/?offset=${offset}`,
        formById: (id: number): string => `${endpoint.pokemon.form}/${id}`,
        allHabitats: (offset: number): string => `${endpoint.pokemon.habitat}/?offset=${offset}`,
        habitatById: (id: number): string => `${endpoint.pokemon.habitat}/${id}`,
        allShapes: (offset: number): string => `${endpoint.pokemon.shape}/?offset=${offset}`,
        shapeById: (id: number): string => `${endpoint.pokemon.shape}/${id}`,
        allSpecies: (offset: number): string => `${endpoint.pokemon.species}/?offset=${offset}`,
        specieById: (id: number): string => `${endpoint.pokemon.species}/${id}}`,
        allStats: (offset: number): string => `${endpoint.pokemon.stat}/?offset=${offset}`,
        statById: (id: number): string => `${endpoint.pokemon.stat}/${id}`,
        allTypes: (offset: number): string => `${endpoint.pokemon.type}/?offset=${offset}`,
        typeById: (id: string): string => `${endpoint.pokemon.type}/${id}`,
    },
    utility: {
        allLanguages: (offset: number): string => `${endpoint.utility.language}/?offset=${offset}`,
        languageById: (id: number): string => `${endpoint.utility.language}/${id}`,
    },
}

export {
    baseURL,
    url
}